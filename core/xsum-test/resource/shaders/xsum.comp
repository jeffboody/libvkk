#version 450

layout (local_size_x=4, local_size_y=1, local_size_z=1) in;

layout(std430, set=0, binding=0) readonly buffer bufferIn
{
	float x[];
};

layout(std430, set=0, binding=1) writeonly buffer bufferOut
{
	float xsum;
};

layout(std430, set=0, binding=2) readonly buffer bufferStride
{
	uint stride;
};

shared float xsum_work[4];

void main()
{
	uint i = gl_GlobalInvocationID.x;
	uint j;
	uint off;

	// compute working xsum
	xsum_work[i] = 0.0f;
	off          = stride*i;
	for(j = 0; j < stride; ++j)
	{
		xsum_work[i] += x[off + j];
	}

	// synchronize work
	memoryBarrierShared();
	barrier();

	// compute final xsum
	if(i == 0)
	{
		xsum = 0;
		for(j = 0; j < 4; ++j)
		{
			xsum += xsum_work[j];
		}
	}
}
